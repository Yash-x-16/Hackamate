// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @unique @default(autoincrement())
  username String   @unique
  password String
  email    String
  Profile  Profile? 
  tags       UserTag[]
  hackathons Hackathon[]
  sentmessages     Message[] @relation("sentmessages")
  recievedmessages Message[] @relation("recievedmessages")
}

model Profile {
  id          Int    @unique @default(autoincrement())
  bio         String
  role        String
  image       Bytes
  userId      Int    @unique
  user        User   @relation(fields: [userId], references: [id])

}

model Tag {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  userTags UserTag[]
}

model UserTag {
  userId Int
  tagId  Int
  user   User @relation(fields: [userId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([userId, tagId]) 
} 

model Hackathon{
  id Int @unique @default(autoincrement()) 
  name String 
  placement String?
  year  Int 
  userid Int 
  user User @relation(fields: [userid],references: [id])
} 

model Message{
  id Int @unique @default(autoincrement())
  senderId Int
  recieverId Int 
  content String
  timestamp  DateTime @default(now())
  sentmessages User @relation("sentmessages",fields:[senderId],references:[id])
  recievedmessages User @relation("recievedmessages",fields: [recieverId],references: [id])
}